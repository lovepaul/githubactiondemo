name: Deploy Spring Boot to EC2

on:
  push:
    branches:
      - main
      - test-branch # 如果需要在测试环境触发

env:
  APP_JAR: build/libs/*.jar

jobs:
  deploy:
    name: Build and Deploy
    runs-on: ubuntu-latest

    # 1. 选择环境
    environment: ${{ github.ref == 'refs/heads/main' && 'production' || 'test' }}

    steps:
      # 1. 检出代码
      - name: Checkout Code
        uses: actions/checkout@v3

      # 2. 设置 Java 环境
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17

      # 3. 缓存 Gradle 构建依赖
      - name: Cache Gradle packages
        uses: actions/cache@v3
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      # 4. 构建项目
      - name: Build with Gradle
        run: ./gradlew clean build -x test

      # 5. 部署到环境
      - name: Deploy to EC2
        uses: appleboy/scp-action@v0.2.4
        with:
          host: ${{ github.ref == 'refs/heads/main' && secrets.PROD_EC2_HOST || secrets.TEST_EC2_HOST }}
          username: ${{ github.ref == 'refs/heads/main' && secrets.PROD_EC2_USER || secrets.TEST_EC2_USER }}
          key: ${{ github.ref == 'refs/heads/main' && secrets.PROD_EC2_PRIVATE_KEY || secrets.TEST_EC2_PRIVATE_KEY }}
          source: ${{ env.APP_JAR }}
          target: /home/ec2-user/springboot-app.jar

      # 6. 启动应用
      - name: Start Spring Boot App
        uses: appleboy/ssh-action@v0.1.8
        with:
          host: ${{ github.ref == 'refs/heads/main' && secrets.PROD_EC2_HOST || secrets.TEST_EC2_HOST }}
          username: ${{ github.ref == 'refs/heads/main' && secrets.PROD_EC2_USER || secrets.TEST_EC2_USER }}
          key: ${{ github.ref == 'refs/heads/main' && secrets.PROD_EC2_PRIVATE_KEY || secrets.TEST_EC2_PRIVATE_KEY }}
          script: |
            pkill -f 'java -jar' || true
            nohup java -jar /home/ec2-user/springboot-app.jar > /etc/applog/app.log 2>&1 &